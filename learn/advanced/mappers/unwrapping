<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible" /><meta content="initial-scale=1" name="viewport" /><title>ROM</title><link href="/assets/stylesheets/all.css" rel="stylesheet" /><script src="/assets/javascripts/all.js"></script><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-2573270-5', 'auto');
ga('send', 'pageview');</script></head><body class="learn learn_advanced learn_advanced_mappers learn_advanced_mappers_unwrapping"><div class="page"><div class="grid"><header class="header"><div class="header__logo"><a class="header__logo__link" href="/">Ruby Object Mapper</a></div><div class="header__menu-toggler" id="navigation__toggler"><span class="fa fa-navicon"></span></div><div class="header__menu" id="navigation__items"><nav class="menu"><ul class="menu__items"><li class="menu__item"><a class="menu__item__link--is-active" href="/learn">Learn</a></li><li class="menu__item"><a class="menu__item__link" href="/api">API</a></li><li class="menu__item"><a class="menu__item__link" href="/blog">Blog</a></li><li class="menu__item"><a class="menu__item__link" href="/contribute">Contribute</a></li><li class="menu__item"><a class="menu__item__link" href="/status">Status</a></li><li class="menu__item--last"><a class="menu__item__link" href="/backers">Backers <3</a></li></ul></nav></div></header><div class="page__sidebar"><div class="sidebar"><h2 class="sidebar__header--first">Learn</h2><ul class="sidebar__items"><li class="sidebar__item"><a class="sidebar__link" href="/learn/introduction/">Introduction</a><ul class="sidebar__sub-items"><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/introduction/philosophy/">Philosophy</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/introduction/why/">Why ROM?</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/introduction/overview/">Overview</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/introduction/active-record/">Active Record and ROM</a></li></ul></li><li class="sidebar__item"><a class="sidebar__link" href="/learn/getting-started/">Getting Started</a><ul class="sidebar__sub-items"><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/getting-started/block-style-setup/">Block Style Setup</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/getting-started/rails-setup/">Rails Setup</a></li></ul></li><li class="sidebar__item"><a class="sidebar__link" href="/learn/core/">Core</a><ul class="sidebar__sub-items"><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/core/relations/">Relations</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/core/schemas/">Schemas</a></li></ul></li><li class="sidebar__item"><a class="sidebar__link" href="/learn/repositories/">Repositories</a><ul class="sidebar__sub-items"><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/repositories/quick-start/">Quick Start</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/repositories/reading-simple-objects/">Reading Simple Objects</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/repositories/reading-aggregates/">Reading Aggregates</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/repositories/composing-relations/">Composing Relations</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/repositories/changesets/">Changesets</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/repositories/writing-aggregates/">Writing Aggregates</a></li></ul></li><li class="sidebar__item"><a class="sidebar__link" href="/learn/sql/">SQL</a><ul class="sidebar__sub-items"><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/sql/relations/">Relations</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/sql/schemas/">Schemas</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/sql/associations/">Associations</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/sql/joins/">Joins</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/sql/commands/">Commands</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/sql/transactions/">Transactions</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/sql/migrations/">Migrations</a></li></ul></li><li class="sidebar__item"><a class="sidebar__link" href="/learn/kafka/">Kafka</a></li><li class="sidebar__item"><a class="sidebar__link--is-active" href="/learn/advanced/">Advanced</a><ul class="sidebar__sub-items"><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/advanced/flat-style-setup/">Flat Style Setup</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/advanced/combine/">Combining Relation Results</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/advanced/commands/">Standalone Commands</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/advanced/custom-commands/">Custom Commands</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link--is-active" href="/learn/advanced/mappers/">Mappers</a></li><li class="sidebar__sub-item"><a class="sidebar__sub-link" href="/learn/advanced/how-to-build-an-adapter/">Adapters</a></li></ul></li><li class="sidebar__item"><a class="sidebar__link" href="/learn/glossary/">Glossary</a></li></ul></div></div><div class="page__content"><div class="content"><h1>Unwrapping Attributes</h1>

<p>The method [unwrap] inverses the <a href="/learn/advanced/mappers/wrapping">wrapping</a> transformation.</p>

<ul>
<li><a href="#basic-usage">Basic Usage</a></li>
<li><a href="#partial-unwrapping">Partial Unwrapping</a></li>
<li><a href="#renaming-attributes">Renaming Attributes</a></li>
<li><a href="#unwrapping-embedded-attributes">Unwrapping Embedded Attributes</a></li>
<li><a href="#nested-unwrapping">Nested Unwrapping</a></li>
<li><a href="#edge-cases">Edge Cases</a></li>
</ul>

<p>Notice, mappers have <a href="../mappers.md#high-level-and-low-level-api">high-level and low-level API</a>. Examples in this section use the high-level API only. The same syntax is applicable to low-level API as well.</p>

<h2>Basic Usage</h2>

<p>Suppose there is a predefined relation that returns an array of nested tuples:</p>
<pre class="syntax ruby"><code><span class="n">users</span> <span class="o">=</span> <span class="no">ROM</span><span class="p">.</span><span class="nf">env</span><span class="p">.</span><span class="nf">relations</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
<span class="n">users</span><span class="p">.</span><span class="nf">first</span>
<span class="c1"># { id: 1, name: "Joe", contact: { email: "joe@example.com", skype: "joe" } }</span>
</code></pre>

<p>With <code>unwrap</code> we can remove the <code>:contact</code> level of nesting.</p>

<h3>Inline Syntax</h3>
<pre class="syntax ruby"><code><span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">unwrap</span> <span class="ss">:contact</span><span class="p">,</span> <span class="p">[</span><span class="ss">:email</span><span class="p">,</span> <span class="ss">:skype</span><span class="p">]</span>
<span class="k">end</span>

<span class="n">users</span><span class="p">.</span><span class="nf">as</span><span class="p">(</span><span class="ss">:unwrapped</span><span class="p">).</span><span class="nf">first</span>
<span class="c1"># { id: 1, name: "Joe", email: "joe@example.com", skype: "joe" }</span>
</code></pre>

<h3>Block Syntax</h3>

<p>Just the same result can be obtained by using the block with attributes defined inside:</p>
<pre class="syntax ruby"><code><span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">unwrap</span> <span class="ss">:contact</span> <span class="k">do</span>
    <span class="n">attribute</span> <span class="ss">:email</span>
    <span class="n">attribute</span> <span class="ss">:skype</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre>

<h2>Partial Unwrapping</h2>

<p>You can unwrap not all the nested attributes, but subset of them:</p>
<pre class="syntax ruby"><code><span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">unwrap</span> <span class="ss">:contact</span><span class="p">,</span> <span class="p">[</span><span class="ss">:email</span><span class="p">]</span>
<span class="k">end</span>

<span class="n">users</span><span class="p">.</span><span class="nf">as</span><span class="p">(</span><span class="ss">:unwrapped</span><span class="p">).</span><span class="nf">first</span>
<span class="c1"># { id: 1, name: "Joe", email: "joe@example.com", contact: { skype: "joe" } }</span>
</code></pre>

<h2>Renaming Attributes</h2>

<p>Inside the block you can use <code>:from</code> option to rename unwrapped attributes:</p>
<pre class="syntax ruby"><code><span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">unwrap</span> <span class="ss">:contact</span> <span class="k">do</span>
    <span class="n">attribute</span> <span class="ss">:contact_email</span><span class="p">,</span> <span class="ss">from: :email</span>
    <span class="n">attribute</span> <span class="ss">:contact_skype</span><span class="p">,</span> <span class="ss">from: :skype</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">users</span><span class="p">.</span><span class="nf">as</span><span class="p">(</span><span class="ss">:unwrapped</span><span class="p">).</span><span class="nf">first</span>
<span class="c1"># { id: 1, name: "Joe", contact_email: "joe@example.com", contact_skype: "joe" }</span>
</code></pre>

<p>You can also use <code>:from</code> option with <code>unwrap</code> to rename the rest of partially unwrapped attribute:</p>
<pre class="syntax ruby"><code><span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">unwrap</span> <span class="ss">:other_contacts</span><span class="p">,</span> <span class="ss">from: :contacts</span> <span class="k">do</span>
    <span class="n">attribute</span> <span class="ss">:email</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">users</span><span class="p">.</span><span class="nf">as</span><span class="p">(</span><span class="ss">:unwrapped</span><span class="p">).</span><span class="nf">first</span>
<span class="c1"># {</span>
<span class="c1">#   id: 1, name: "Joe", email: "joe@example.com",</span>
<span class="c1">#   other_contacts: { skype: "joe" }</span>
<span class="c1"># }</span>
</code></pre>

<h2>Unwrapping Embedded Attributes</h2>

<p>With the help of <a href="/learn/advanced/mappers/embedding">the <code>embedded</code> method</a>, attributes can be unwrapped from any level of nested data.</p>
<pre class="syntax ruby"><code><span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">embedded</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">type: :hash</span> <span class="k">do</span>
    <span class="n">unwrap</span> <span class="ss">:emails</span> <span class="k">do</span>
      <span class="n">attribute</span> <span class="ss">:email</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">users</span> <span class="o">=</span> <span class="no">ROM</span><span class="p">.</span><span class="nf">env</span><span class="p">.</span><span class="nf">relations</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
<span class="n">users</span><span class="p">.</span><span class="nf">first</span>
<span class="c1"># { role: 'admin', user: { name: 'Joe', emails: { email: 'joe@doe.com' } } }</span>
<span class="n">users</span><span class="p">.</span><span class="nf">as</span><span class="p">(</span><span class="ss">:unwrapped</span><span class="p">).</span><span class="nf">first</span>
<span class="c1"># { role: 'admin', user: { name: 'Joe', email: 'joe@doe.com' } }</span>
</code></pre>

<h2>Nested Unwrapping</h2>

<p>Unwrapping can be applied to several layers at once:</p>
<pre class="syntax ruby"><code><span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">unwrap</span> <span class="ss">:user</span> <span class="k">do</span>
    <span class="n">attribute</span> <span class="ss">:name</span>
    <span class="n">unwrap</span> <span class="ss">:contacts</span> <span class="k">do</span>
      <span class="n">attribute</span> <span class="ss">:email</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">users</span> <span class="o">=</span> <span class="no">ROM</span><span class="p">.</span><span class="nf">env</span><span class="p">.</span><span class="nf">relations</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
<span class="n">users</span><span class="p">.</span><span class="nf">first</span>
<span class="c1"># { role: 'admin', user: { name: 'Joe', contacts: { email: 'joe@doe.com' } } }</span>
<span class="n">users</span><span class="p">.</span><span class="nf">as</span><span class="p">(</span><span class="ss">:unwrapped</span><span class="p">).</span><span class="nf">first</span>
<span class="c1"># { role: 'admin', name: 'Joe', email: 'joe@doe.com' }</span>
</code></pre>

<p>You haven&#39;t to list unwrapped attribute more than once. In the example above we mentioned <code>email</code> attribute only once, though it was unwrapped at two levels.</p>

<h2>Edge Cases</h2>

<h3>Rewriting Existing Attributes</h3>

<p>In case the attributes it the root has the same names as unwrapped ones, the root attributes will be rewritten:</p>
<pre class="syntax ruby"><code><span class="n">users</span> <span class="o">=</span> <span class="no">ROM</span><span class="p">.</span><span class="nf">env</span><span class="p">.</span><span class="nf">relations</span><span class="p">(</span><span class="ss">:users</span><span class="p">)</span>
<span class="n">users</span><span class="p">.</span><span class="nf">first</span>
<span class="c1"># { id: 1, name: "Joe", email: "joe@doe.com", contact: { email: "joe@example.com" } }</span>

<span class="k">class</span> <span class="nc">UnwrappedUsersMapper</span> <span class="o">&lt;</span> <span class="no">ROM</span><span class="o">::</span><span class="no">Mapper</span>
  <span class="n">register_as</span> <span class="ss">:unwrapped</span>
  <span class="n">relation</span> <span class="ss">:users</span>

  <span class="n">unwrap</span> <span class="ss">:contact</span> <span class="k">do</span>
    <span class="n">attribute</span> <span class="ss">:email</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">users</span><span class="p">.</span><span class="nf">as</span><span class="p">(</span><span class="ss">:unwrapped</span><span class="p">).</span><span class="nf">first</span>
<span class="c1"># { id: 1, name: "Joe", email: "joe@example.com" }</span>
</code></pre>
</div></div></div></div><div class="footer"><div class="grid"><div class="footer__content"><h3 class="footer__header">Sponsors</h3><p>We are looking for sustainable sponsorship. If your company is relying
on ROM or simply want to see ROM evolve faster to meet your requirements,
please consider backing the project through <a href="https://salt.bountysource.com/teams/rom-rb">our campaign on
Bountysource</a>.</p>
</div><div class="footer__fine-print"><div class="footer__fine-print__copyright"><small>&copy; 2014-2016 Ruby Object Mapper. Design by <a href="https://github.com/angeloashmore">@angeloashmore</a>. Logo by <a href="https://github.com/kapowaz">@kapowaz</a>.</small></div><div class="footer__fine-print__social"><a class="footer__fine-print__social__icon" href="https://github.com/rom-rb/rom"><span class="fa fa-github-alt"></span></a><a class="footer__fine-print__social__icon--last" href="https://twitter.com/rom_rb"><span class="fa fa-twitter"></span></a></div></div></div></div></body></html>